/**
 *  Media Queries
 *  - - - - - - - - - - - - - - - - */

@mixin from($device-width) {
  @media screen and (min-width: $device-width) {
    @content;
  }
}

@mixin to($device-width) {
  @media screen and (max-width: $device-width - 1) {
    @content;
  }
}

@mixin from-height($device-height) {
  @media screen and (min-height: $device-height) {
    @content;
  }
}

@mixin to-height($device-height) {
  @media screen and (max-height: $device-height - 1) {
    @content;
  }
}

@mixin xs {
  @include from($screen-xs-min) {
    @content;
  }
}

@mixin sm {
  @include from($screen-sm-min) {
    @content;
  }
}

@mixin md {
  @include from($screen-md-min) {
    @content;
  }
}

@mixin lg {
  @include from($screen-lg-min) {
    @content;
  }
}

@mixin xl {
  @include from($screen-xl-min) {
    @content;
  }
}

/**
 *  Visual
 *  - - - - - - - - - - - - - - - - */

@mixin background-image($image) {
  background-image: url($image);
  background-repeat: no-repeat;
  background-position: center center;
}

@mixin background-cover($image) {
  @include background-image($image);
  background-size: cover;
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='$image', sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='$image', sizingMethod='scale')";
}

@mixin background-retina($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    @include background-image($image);
    @include background-size(($width / 2) ($height / 2));
  }
}

@mixin background-mask($background-color) {
  position: relative;

  &:before {
    @include animated;
    background-color: $background-color;
    bottom: 0;
    content: "";
    left: 0;
    right: 0;
    position: absolute;
    pointer-events: none;
    top: 0;
    z-index: 0;
  }
}

@mixin drop-shadow($drop-shadow) {
  -webkit-filter: drop-shadow($drop-shadow);
  filter: drop-shadow($drop-shadow);
}

@mixin linear-gradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

/**
 *  Interactive
 *  - - - - - - - - - - - - - - - - */

@mixin overflow-scroll {
  overflow: scroll;
  overflow-scrolling: touch;
  -webkit-overflow-scrolling: touch;
}
